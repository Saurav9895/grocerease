rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
        return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
      
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
      }
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /orders/{orderId} {
      allow read: if request.auth != null && (isOwner(resource.data.userId) || isAdmin());
      allow create: if request.auth != null && isOwner(request.resource.data.userId);
      allow update: if isAdmin();
    }
    
    match /users/{userId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        // Users can update their own profile, but cannot change their admin status.
        // Admins can change other users' status (though no UI exists for it currently).
        allow update: if (isOwner(userId) && request.resource.data.isAdmin == resource.data.isAdmin) || isAdmin();
    }
    
    match /settings/{docId} {
        allow read, write: if isAdmin();
    }

    match /promocodes/{codeId} {
         allow read, write: if isAdmin();
    }
  }
}
