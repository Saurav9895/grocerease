rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // PUBLIC-ACCESS COLLECTIONS
    // Allow anyone to read products, categories, reviews, and specific settings.
    match /products/{productId} {
      allow read: if true;
      // create/delete is admin-only
      allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null;
      // update is for signed-in users (stock/review) or admins (anything)
      allow update: if request.auth != null && (
                      (
                        request.resource.data.diff(resource.data).affectedKeys()
                          .hasAny(['stock', 'rating', 'reviewCount', 'variants'])
                      ) ||
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null
                    );
    }
    
    match /products/{productId}/reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null; // Any signed-in user can create a review
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      // create/update/delete is admin-only
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null;
    }

    match /attributes/{attributeId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null;
    }
    
    match /settings/{settingId} {
      allow read: if true;
      // write is main-admin only
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'main';
    }

    match /promocodes/{promoId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'main';
    }

    // USER-SPECIFIC COLLECTIONS
    // Users can only access their own data.
    match /users/{userId} {
      allow read, update, create: if request.auth != null && request.auth.uid == userId;
    }

    match /orders/{orderId} {
      // Users can create their own orders.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Users can read their own orders, Admins can read any order.
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null);
      // Only admins can update orders (e.g., change status).
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null;
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
