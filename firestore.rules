rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'main' ||
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'standard';
    }
    
    function isMainAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'main';
    }
    
    function isDeliveryPerson() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'delivery';
    }

    function isVendor() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'vendor';
    }

    function getVendorId() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.vendorId;
    }

    match /users/{userId} {
      // Users can read their own profile, and admins can read any profile.
      allow read: if isAuth() && (request.auth.uid == userId || isMainAdmin());
      // Users can update their own profile (e.g. name, phone, address). Admins can update any profile (e.g. roles).
      allow update: if isAuth() && (request.auth.uid == userId || isMainAdmin());
      // Allow new user creation.
      allow create: if isAuth();
    }

    match /products/{productId} {
      // Anyone can read products.
      allow read: if true;
      // Admins or the product's own vendor can create products.
      allow create: if isAuth() && (isAdmin() || (isVendor() && request.resource.data.vendorId == getVendorId()));
      // Admins or the product's own vendor can update products.
      allow update: if isAuth() && (isAdmin() || (isVendor() && resource.data.vendorId == getVendorId()));
      // Admins or the product's own vendor can delete products.
      allow delete: if isAuth() && (isAdmin() || (isVendor() && resource.data.vendorId == getVendorId()));
      
      // Reviews subcollection
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isAuth();
      }
    }
    
    match /categories/{categoryId} {
      // Anyone can read categories.
      allow read: if true;
      // Only admins can write to categories.
      allow write: if isAuth() && isAdmin();
    }

    match /attributes/{attributeId} {
      // Anyone can read attributes.
      allow read: if true;
      // Only admins can write to attributes.
      allow write: if isAuth() && isAdmin();
    }
    
    match /orders/{orderId} {
      // User can read their own orders. Admins can read all. Delivery people can read assigned orders.
      // Vendors can read orders containing their products.
      allow read: if isAuth() && 
                    (resource.data.userId == request.auth.uid || 
                     isAdmin() || 
                     (isDeliveryPerson() && resource.data.deliveryPersonId == request.auth.uid) ||
                     (isVendor() && getVendorId() in resource.data.vendorIds));
      
      // Users can create orders.
      allow create: if isAuth();
      
      // Admins and delivery people can update orders.
      allow update: if isAuth() && (isAdmin() || isDeliveryPerson());
    }

    match /settings/{settingId} {
      // Anyone can read settings.
      allow read: if true;
      // Only main admins can write to settings.
      allow write: if isAuth() && isMainAdmin();
    }

    match /promocodes/{codeId} {
      // Users need to read codes to validate them.
      allow read: if isAuth();
      // Only main admins can create/delete promo codes.
      allow write: if isAuth() && isMainAdmin();
    }

    match /vendors/{vendorId} {
        allow read: if true;
        allow write: if isAuth() && (isMainAdmin() || (isVendor() && resource.data.ownerId == request.auth.uid));
    }
  }
}
