rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin status
    function isAdmin(userId) {
      // In a real production app, you would have a more secure way 
      // of identifying admins, like a custom claim or a separate 'admins' collection.
      // For this example, we'll keep it simple: any authenticated user can act as an admin.
      return userId != null;
    }

    // Rules for products collection
    match /products/{productId} {
      allow read: if true; // Everyone can read products
      allow create, update, delete: if isAdmin(request.auth.uid); // Only admins can modify products

      // Rules for reviews subcollection
      match /reviews/{reviewId} {
        allow read: if true; // Everyone can read reviews
        // Only authenticated users who are the author can create/update their own review
        allow create, update: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Only the author or an admin can delete a review
        allow delete: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      }
    }

    // Rules for categories collection
    match /categories/{categoryId} {
      allow read: if true; // Everyone can read categories
      allow create, update, delete: if isAdmin(request.auth.uid); // Only admins can modify categories
    }

    // Rules for orders collection
    match /orders/{orderId} {
      // Users can only access their own orders. Admins can access all orders.
      allow read, update: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      // Only authenticated users can create orders for themselves
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for users collection (for storing addresses)
    match /users/{userId} {
      // Users can only access their own user document
      allow read, write: if request.auth.uid == userId;
    }
    
    // Rules for settings collection
    match /settings/{docId} {
       allow read: if true; // Anyone can read settings
       allow write: if isAdmin(request.auth.uid); // Only admins can change settings
    }
    
    // Rules for promocodes collection
    match /promocodes/{code} {
      allow read: if request.auth != null; // Authenticated users can read/validate codes
      allow write, delete: if isAdmin(request.auth.uid); // Only admins can manage codes
    }
  }
}
