
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function isMainAdmin() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole == 'main';
    }

    function isAdmin() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole in ['main', 'standard'];
    }

    function isVendor() {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return request.auth.uid != null && userDoc.data.adminRole == 'vendor' && userDoc.data.vendorId != null;
    }
    
    function isStaff() {
        return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.adminRole != null;
    }

    match /users/{userId} {
      allow read: if isUser(userId) || isMainAdmin();
      allow update: if isUser(userId) || isMainAdmin();
      allow create: if true;
      allow list: if isMainAdmin();
    }
    
    match /settings/{docId} {
      allow read: if true;
      allow write: if isMainAdmin();
    }
    
    match /promocodes/{code} {
        allow read: if true;
        allow write: if isMainAdmin();
    }
    
    match /attributes/{attributeId} {
        allow read: if isStaff();
        allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create, update: if isAdmin() || isVendor();
      allow delete: if isAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      allow create: if isVendor() && request.resource.data.vendorId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.vendorId;
      allow update: if isAdmin() || (isVendor() && resource.data.vendorId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.vendorId);
      allow delete: if isAdmin() || (isVendor() && resource.data.vendorId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.vendorId);

      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth.uid != null;
      }
    }

    match /orders/{orderId} {
      allow read: if isUser(resource.data.userId) || request.auth.uid == resource.data.deliveryPersonId || isAdmin() || (isVendor() && resource.data.vendorIds.hasAny([get(/databases/$(database)/documents/users/$(request.auth.uid)).data.vendorId]));
      allow create: if request.auth.uid != null;
      allow update: if isAdmin() || request.auth.uid == resource.data.deliveryPersonId;
    }
    
    match /vendors/{vendorId} {
        allow read: if isStaff();
        allow create: if isMainAdmin();
        allow update: if isMainAdmin() || (isVendor() && vendorId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.vendorId);
    }
  }
}
